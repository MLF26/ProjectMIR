data()
data(iris)
help(iris)
view(iris)
View(iris)
ok<-data(iris)
ok$Species
x=c(1,1,1,1)
y=c(1,1)
z=2*x+y
z
y=c(1,2)
z=2*x+y
z
1:10
r=1:10
r
z[1:3]
z[c(1,3)]
i=data.frame(iris)
i$Species
type(iris)
iris$Species
rownames(iris)
colnames(iris)
diag(10)
diag(c(1,1))
vect=diag(c(1,2,3))
rownames(diag)=c("jean","coco")
vect1=diag(c(1,5,4)
t=rbind(vect,vect1)
vect
vect1
vect1=diag(c(1,5,4))
t=rbind(vect,vect1)
t
help(apply)
summary(iris)
hist(iris)
View(iris)
hist(iris$Petal.Length)
hist(iris$Species)
boxplot(iris$Species)
reg=lm(iris$Species~iris$Sepal.Length)
reg=lm(iris$Sepal.Width~iris$Sepal.Length)
summary(reg)
plot(reg)
getdictionnary("C:/Users/Olivier/Documents/Projet_MIR/Voice",freq=0.05)
getdictionnary=function(learningbase,freq=0.05){
library(tm)
data<-read.csv(learningbase, encoding="utf8")
#CONSTRUCTION DU DICTIONNAIRE
#RECHERCHE MOTS PLUS FREQUENTS
#FREQUENCE MINIMALE D'APPARITION D'UN MOT
N<-freq*length(data$text)
#CREATION D'UN CORPUS ET TDM
x<-Corpus(VectorSource(data$text))
x<-TermDocumentMatrix(x,control = list(wordLengths = c(3,10))) #on ne considÃ¨re pas les mots trop longs et trop courts
#CONSTRUCTION DU DICTIONNAIRE DE MOTS
y<-as.matrix(x)
y<-sort(rowSums(y), decreasing=TRUE)
y<-as.data.frame(y)
mots<-row.names(y)
dico<-data.frame(mots,y,row.names=NULL)
names(dico)<-c("Mots","Frequence")
dico<-dico[dico$Frequence>N,]
write.csv(dico,file="dico.csv")
}
getdictionnary("C:/Users/Olivier/Documents/Projet_MIR/Voice",freq=0.05)
getdictionnary("C:/Users/Olivier/Documents/Projet_MIR/Voice/20150201.csv",freq=0.05)
getwd()
getdictionnary("C:/Users/Olivier/Documents/Projet_MIR/Voice/20150207.csv",freq=0.05)
processtweet("20150202.csv","dico.csv")
processtweet=function(fichier,dico){ #!!!LE DICO DOIT ETRE ISSU DE GETDICTIONNARY!!!
library(tm)
data<-read.csv(fichier)
#CONSTRUCTION VECTEUR DE MOTS / AU DICTIONNAIRE
library(RecordLinkage)
dico<-read.csv(dico)
tweetfeature<-data.frame(matrix(0,0,length(dico$Mots)),row.names=NULL)
for (i in 1:length(data$text)){
vectexti=as.vector(strsplit(data$text[i],split=" ")[[1]])
vecmotsi=c()
for (j in 1:length(dico$Mots)){
vecmotsi=c(vecmotsi,0)
for (k in 1:length(vectexti)){
if (jarowinkler(vectexti[k],as.character(dico$Mots[j]))==1){
vecmotsi[j]=1
}
}
}
tweetfeature<-rbind(tweetfeature,vecmotsi)
}
names(tweetfeature)<-dico$Mots
fichierfeatures=paste0(sub(".[[:alnum:]]*$","",fichier),"features.csv")
write.csv(tweetfeature,file=fichierfeatures)
}
processtweet("20150202.csv","dico.csv")
instal.packages("RecordLinkage")
install.packages("RecordLinkage")
processtweet("20150202.csv","dico.csv")
processtweet=function(fichier,dico){ #!!!LE DICO DOIT ETRE ISSU DE GETDICTIONNARY!!!
library(tm)
data<-read.csv(fichier)
#CONSTRUCTION VECTEUR DE MOTS / AU DICTIONNAIRE
library(RecordLinkage)
dico<-read.csv(dico)
tweetfeature<-data.frame(matrix(0,0,length(dico$Mots)),row.names=NULL)
for (i in 1:length(data$textStemming)){
vectexti=as.vector(strsplit(data$textStemming[i],split=" ")[[1]])
vecmotsi=c()
for (j in 1:length(dico$Mots)){
vecmotsi=c(vecmotsi,0)
for (k in 1:length(vectexti)){
if (jarowinkler(vectexti[k],as.character(dico$Mots[j]))==1){
vecmotsi[j]=1
}
}
}
tweetfeature<-rbind(tweetfeature,vecmotsi)
}
names(tweetfeature)<-dico$Mots
fichierfeatures=paste0(sub(".[[:alnum:]]*$","",fichier),"features.csv")
write.csv(tweetfeature,file=fichierfeatures)
}
processtweet("20150202.csv","dico.csv")
matrix?
?matrix
M=matrix(0,0,5,row.names=NULL)
processtweet("20150202.csv","dico.csv")
M=matrix(0,0,5,row.names=NULL)
M=matrix(0,0,5)
M
M=matrix(0,0,5, row.names="NULL")
M=matrix(0,0,5, row.names=NULL)
M=matrix(0,0,5)
M
M=matrix(5)
M
M=matrix(0,5)
M
M=matrix(0,0,5)
M
M=matrix(0,0)
M=matrix(5,0)
M=matrix(0,0,5)
M
?strsplit
processtweet=function(fichier,dico){ #!!!LE DICO DOIT ETRE ISSU DE GETDICTIONNARY!!!
library(tm)
data<-read.csv(fichier)
#CONSTRUCTION VECTEUR DE MOTS / AU DICTIONNAIRE
library(RecordLinkage)
dico<-read.csv(dico)
tweetfeature<-data.frame(matrix(0,0,length(dico$Mots)),row.names=NULL)
for (i in 1:length(data$textStemming)){
vectexti=as.vector(strsplit(data$textStemming[i],split=", ")[[1]])
vecmotsi=c()
for (j in 1:length(dico$Mots)){
vecmotsi=c(vecmotsi,0)
for (k in 1:length(vectexti)){
if (jarowinkler(vectexti[k],as.character(dico$Mots[j]))==1){
vecmotsi[j]=1
}
}
}
tweetfeature<-rbind(tweetfeature,vecmotsi)
}
names(tweetfeature)<-dico$Mots
fichierfeatures=paste0(sub(".[[:alnum:]]*$","",fichier),"features.csv")
write.csv(tweetfeature,file=fichierfeatures)
}
processtweet("20150202.csv","dico.csv")
processtweet=function(fichier,dico){ #!!!LE DICO DOIT ETRE ISSU DE GETDICTIONNARY!!!
library(tm)
data<-read.csv(fichier)
#CONSTRUCTION VECTEUR DE MOTS / AU DICTIONNAIRE
library(RecordLinkage)
dico<-read.csv(dico)
tweetfeature<-data.frame(matrix(0,0,length(dico$Mots)),row.names=NULL)
for (i in 1:length(data$textStemming)){
vectexti=as.vector(strsplit(data$textStemming[i],split=" ")[[1]])
vecmotsi=c()
for (j in 1:length(dico$Mots)){
vecmotsi=c(vecmotsi,0)
for (k in 1:length(vectexti)){
if (jarowinkler(vectexti[k],as.character(dico$Mots[j]))==1){
vecmotsi[j]=1
}
}
}
tweetfeature<-rbind(tweetfeature,vecmotsi)
}
names(tweetfeature)<-dico$Mots
fichierfeatures=paste0(sub(".[[:alnum:]]*$","",fichier),"features.csv")
write.csv(tweetfeature,file=fichierfeatures)
}
processtweet("20150202.csv","dico.csv")
processtweet=function(fichier,dico){ #!!!LE DICO DOIT ETRE ISSU DE GETDICTIONNARY!!!
library(tm)
data<-read.csv(fichier)
#CONSTRUCTION VECTEUR DE MOTS / AU DICTIONNAIRE
library(RecordLinkage)
dico<-read.csv(dico)
tweetfeature<-data.frame(matrix(0,0,length(dico$Mots)),row.names=NULL)
for (i in 1:length(data$textStemming)){
vectexti=as.vector(strsplit(data$textStemming[i],split=" ")[[1]])
vecmotsi=c()
for (j in 1:length(dico$Mots)){
vecmotsi=c(vecmotsi,0)
for (k in 1:length(vectexti)){
if (jarowinkler(vectexti[k],as.character(dico$Mots[j]))==1){
vecmotsi[j]=1
}
}
}
tweetfeature<-rbind(tweetfeature,vecmotsi)
}
names(tweetfeature)<-dico$Mots
fichierfeatures=paste0(sub(".[[:alnum:]]*$","",fichier),"features.csv")
write.csv(tweetfeature,file=fichierfeatures)
}
processtweet("20150202.csv","dico.csv")
processtweet=function(fichier,dico){ #!!!LE DICO DOIT ETRE ISSU DE GETDICTIONNARY!!!
library(tm)
data<-read.csv(fichier)
#CONSTRUCTION VECTEUR DE MOTS / AU DICTIONNAIRE
library(RecordLinkage)
dico<-read.csv(dico)
tweetfeature<-data.frame(matrix(0,0,length(dico$Mots)),row.names=NULL)
for (i in 1:length(data$textStemming)){
vectexti=as.vector(strsplit(data$textStemming[i],split=" ", fixed = TRUE)[[1]])
vecmotsi=c()
for (j in 1:length(dico$Mots)){
vecmotsi=c(vecmotsi,0)
for (k in 1:length(vectexti)){
if (jarowinkler(vectexti[k],as.character(dico$Mots[j]))==1){
vecmotsi[j]=1
}
}
}
tweetfeature<-rbind(tweetfeature,vecmotsi)
}
names(tweetfeature)<-dico$Mots
fichierfeatures=paste0(sub(".[[:alnum:]]*$","",fichier),"features.csv")
write.csv(tweetfeature,file=fichierfeatures)
}
processtweet("20150202.csv","dico.csv")
data<-read.csv("20150202.csv")
data
data$testStemming
data$textStemming
View(data)
data<-read.csv("20150205.csv")
data$textStemming
processtweet=function(fichier,dico){ #!!!LE DICO DOIT ETRE ISSU DE GETDICTIONNARY!!!
library(tm)
data<-read.csv(fichier)
#CONSTRUCTION VECTEUR DE MOTS / AU DICTIONNAIRE
library(RecordLinkage)
dico<-read.csv(dico)
tweetfeature<-data.frame(matrix(0,0,length(dico$Mots)),row.names=NULL)
for (i in 1:length(data$textStemming)){
vectexti=as.vector(strsplit(data$textStemming[i],split=" ")[[1]])
vecmotsi=c()
for (j in 1:length(dico$Mots)){
vecmotsi=c(vecmotsi,0)
for (k in 1:length(vectexti)){
if (jarowinkler(vectexti[k],as.character(dico$Mots[j]))==1){
vecmotsi[j]=1
}
}
}
tweetfeature<-rbind(tweetfeature,vecmotsi)
}
names(tweetfeature)<-dico$Mots
fichierfeatures=paste0(sub(".[[:alnum:]]*$","",fichier),"features.csv")
write.csv(tweetfeature,file=fichierfeatures)
}
processtweet("20150205.csv","dico.csv")
data<-read.csv("20150205.csv")
View(data)
processtweet("20150205.csv","dico.csv")
